"use strict";(self.webpackChunk_rnx_kit_docsite=self.webpackChunk_rnx_kit_docsite||[]).push([[58],{5318:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),f=l(n),d=a,g=f["".concat(p,".").concat(d)]||f[d]||u[d]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3557:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var r=n(5773),a=n(808),o=(n(7378),n(5318)),i=["components"],s={},p="jest-preset",l={unversionedId:"tools/jest-preset",id:"tools/jest-preset",title:"jest-preset",description:"",source:"@site/docs/tools/jest-preset.mdx",sourceDirName:"tools",slug:"/tools/jest-preset",permalink:"/rnx-kit/docs/tools/jest-preset",editUrl:"https://github.com/microsoft/rnx-kit/tree/main/docsite/docs/tools/jest-preset.mdx",tags:[],version:"current",frontMatter:{},sidebar:"toolsSidebar",previous:{title:"golang",permalink:"/rnx-kit/docs/tools/golang"},next:{title:"metro-config",permalink:"/rnx-kit/docs/tools/metro-config"}},c={},u=[{value:"Usage",id:"usage",level:2},{value:"In a TypeScript-only Package (Non-React Native)",id:"in-a-typescript-only-package-non-react-native",level:3},{value:"In a React Native Package",id:"in-a-react-native-package",level:3},{value:"Single <code>jest.config.js</code>",id:"single-jestconfigjs",level:4},{value:"Multiple <code>jest.config.js</code>",id:"multiple-jestconfigjs",level:4},{value:"Use <code>@rnx-kit/cli</code>",id:"use-rnx-kitcli",level:4},{value:"In an Out-of-Tree Platform Package",id:"in-an-out-of-tree-platform-package",level:3}],f={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"jest-preset"},"jest-preset"),(0,o.kt)("p",null,"A Jest preset with support for React Native\n",(0,o.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/platform-specific-code#platform-specific-extensions"},"platform-specific extensions"),"\nand ",(0,o.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript"),"."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("h3",{id:"in-a-typescript-only-package-non-react-native"},"In a TypeScript-only Package (Non-React Native)"),(0,o.kt)("p",null,"Add ",(0,o.kt)("inlineCode",{parentName:"p"},'preset: "@rnx-kit/jest-preset"')," to your Jest config:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff"},' module.exports = {\n+  preset: "@rnx-kit/jest-preset",\n   ...\n };\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"@rnx-kit/jest-preset")," will detect that you're not targeting React Native and\nexclude any React Native specific configurations."),(0,o.kt)("h3",{id:"in-a-react-native-package"},"In a React Native Package"),(0,o.kt)("p",null,"There are three ways to use this preset when targeting React Native, depending\non your personal preference."),(0,o.kt)("h4",{id:"single-jestconfigjs"},"Single ",(0,o.kt)("inlineCode",{parentName:"h4"},"jest.config.js")),(0,o.kt)("p",null,"If you prefer to use a single Jest config, you can provide the target platform\nvia an environment variable. First, add ",(0,o.kt)("inlineCode",{parentName:"p"},'preset: "@rnx-kit/jest-preset"')," to your\nJest config:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff"},' module.exports = {\n+  preset: "@rnx-kit/jest-preset",\n   ...\n };\n')),(0,o.kt)("p",null,"Then specify the target platform when running Jest:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"RN_TARGET_PLATFORM=ios npm run jest\n")),(0,o.kt)("h4",{id:"multiple-jestconfigjs"},"Multiple ",(0,o.kt)("inlineCode",{parentName:"h4"},"jest.config.js")),(0,o.kt)("p",null,"Alternatively, you can have a Jest config file for each platform, e.g.:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// jest.config.ios.js\nmodule.exports = require("@rnx-kit/jest-preset")("ios", {\n  ...\n});\n')),(0,o.kt)("p",null,"Then specify the config file to use when running Jest:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npm run jest --config jest.config.ios.js\n")),(0,o.kt)("h4",{id:"use-rnx-kitcli"},"Use ",(0,o.kt)("inlineCode",{parentName:"h4"},"@rnx-kit/cli")),(0,o.kt)("p",null,"You can specify the target platform using the ",(0,o.kt)("inlineCode",{parentName:"p"},"rnx-test")," command provided by\n",(0,o.kt)("inlineCode",{parentName:"p"},"@rnx-kit/cli"),". First, add ",(0,o.kt)("inlineCode",{parentName:"p"},'preset: "@rnx-kit/jest-preset"')," to your Jest config:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff"},' module.exports = {\n+  preset: "@rnx-kit/jest-preset",\n   ...\n };\n')),(0,o.kt)("p",null,"Then specify the target platform when running ",(0,o.kt)("inlineCode",{parentName:"p"},"rnx-test"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"npm run react-native rnx-test --platform ios\n")),(0,o.kt)("h3",{id:"in-an-out-of-tree-platform-package"},"In an Out-of-Tree Platform Package"),(0,o.kt)("p",null,"Add ",(0,o.kt)("inlineCode",{parentName:"p"},'preset: "@rnx-kit/jest-preset"')," to your Jest config:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff"},' module.exports = {\n+  preset: "@rnx-kit/jest-preset",\n   ...\n };\n')),(0,o.kt)("p",null,"The target platform will be deduced by reading ",(0,o.kt)("inlineCode",{parentName:"p"},"react-native.config.js")," at the\npackage root."))}d.isMDXComponent=!0}}]);