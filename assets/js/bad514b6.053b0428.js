"use strict";(self.webpackChunk_rnx_kit_docsite=self.webpackChunk_rnx_kit_docsite||[]).push([[7708],{5318:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(7378);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),f=p(r),m=o,v=f["".concat(s,".").concat(m)]||f[m]||u[m]||i;return r?n.createElement(v,a(a({ref:t},l),{},{components:r})):n.createElement(v,a({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9404:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return u}});var n=r(5773),o=r(808),i=(r(7378),r(5318)),a=["components"],c={},s="typescript-react-native-resolver",p={unversionedId:"tools/typescript-react-native-resolver",id:"tools/typescript-react-native-resolver",title:"typescript-react-native-resolver",description:"",source:"@site/docs/tools/typescript-react-native-resolver.mdx",sourceDirName:"tools",slug:"/tools/typescript-react-native-resolver",permalink:"/rnx-kit/docs/tools/typescript-react-native-resolver",editUrl:"https://github.com/microsoft/rnx-kit/tree/main/docsite/docs/tools/typescript-react-native-resolver.mdx",tags:[],version:"current",frontMatter:{},sidebar:"toolsSidebar",previous:{title:"typescript-react-native-compiler",permalink:"/rnx-kit/docs/tools/typescript-react-native-compiler"},next:{title:"typescript-service",permalink:"/rnx-kit/docs/tools/typescript-service"}},l={},u=[],f={toc:u};function m(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"typescript-react-native-resolver"},"typescript-react-native-resolver"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"@rnx-kit/typescript-react-native-resolver")," is a TypeScript module resolver for\nuse with react-native projects."),(0,i.kt)("p",null,"This package is intended to be used with ",(0,i.kt)("inlineCode",{parentName:"p"},"@rnx-kit/typescript-service"),". It\nexports an implementation of ",(0,i.kt)("inlineCode",{parentName:"p"},"ResolverHost")," which combines Node resolution with\nreact-native resolution."),(0,i.kt)("p",null,"The resolver uses the target platform to find platform-override files such as\n",(0,i.kt)("inlineCode",{parentName:"p"},"foo.ios.ts")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"foo.native.ts"),". It also maps ",(0,i.kt)("inlineCode",{parentName:"p"},"react-native")," module references\nto out-of-tree platforms such as ",(0,i.kt)("inlineCode",{parentName:"p"},"react-native-windows")," and\n",(0,i.kt)("inlineCode",{parentName:"p"},"react-native-macos"),". For performance reasons, these mappings are built into the\nresolver, rather than loaded dynamically using ",(0,i.kt)("inlineCode",{parentName:"p"},"@react-native-community/cli"),"."))}m.isMDXComponent=!0}}]);