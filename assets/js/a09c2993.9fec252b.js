"use strict";(self.webpackChunk_rnx_kit_docsite=self.webpackChunk_rnx_kit_docsite||[]).push([[4128],{5318:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var o=t(7378);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},p=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return t?o.createElement(h,i(i({ref:n},u),{},{components:t})):o.createElement(h,i({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5800:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var o=t(5773),r=t(808),a=(t(7378),t(5318)),i=["components"],l={},s="Introduction",c={unversionedId:"introduction",id:"introduction",title:"Introduction",description:"React Native engineering is complicated, and the ecosystem changes quickly. The",source:"@site/docs/introduction.md",sourceDirName:".",slug:"/introduction",permalink:"/rnx-kit/docs/introduction",editUrl:"https://github.com/microsoft/rnx-kit/tree/main/docsite/docs/introduction.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",next:{title:"Dependencies",permalink:"/rnx-kit/docs/dependencies"}},u={},d=[{value:"Tools? I Like Tools!",id:"tools-i-like-tools",level:2},{value:"Using the Tools",id:"using-the-tools",level:2},{value:"Command-Line Interface",id:"command-line-interface",level:3},{value:"Choosing Individual Tools",id:"choosing-individual-tools",level:3},{value:"Web",id:"web",level:2}],p={toc:d};function m(e){var n=e.components,t=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"React Native engineering is complicated, and the ecosystem changes quickly. The\ntools here are purpose-built to give you an exceptional developer experience,\nthroughout the lifecycle of your React Native apps and libraries."),(0,a.kt)("h2",{id:"tools-i-like-tools"},"Tools? I Like Tools!"),(0,a.kt)("p",null,"Then you're in the right place! There are lots of tools here to help you."),(0,a.kt)("p",null,"Have you struggled to find the right combination of React Native dependencies\nthat work well together and are compatible with each other? ",(0,a.kt)("em",{parentName:"p"},"And")," that match the\nReact Native release you're using? There's\n",(0,a.kt)("a",{parentName:"p",href:"./guides/dependency-management"},"a tool for that"),"! It's all automated, too."),(0,a.kt)("p",null,"Can't use Metro because it doesn't understand symlinks? Yarn, npm, and pmpm all\nuse symlinks these days. There's\n",(0,a.kt)("a",{parentName:"p",href:"./tools/metro-resolver-symlinks"},"a tool for that"),"! A few lines of\nconfiguration, and you're ready to go."),(0,a.kt)("p",null,"Do you use Metro and miss the type-safe bundling and bundle-serving in Haul and\nWebpack? There's ",(0,a.kt)("a",{parentName:"p",href:"./guides/bundling"},"a tool for that"),"!"),(0,a.kt)("p",null,"This just scratches the surface, and more are being built all the time."),(0,a.kt)("h2",{id:"using-the-tools"},"Using the Tools"),(0,a.kt)("p",null,"Adding tools to a project or monorepo isn't a linear journey, and it won't be\nthe same for everyone. Each situation is different, and has its own unique\nchallenges and requirements."),(0,a.kt)("p",null,"You can use the command-line interface, which is a turn-key solution focused on\ncommon engineering tasks. You can also pick individual tools, integrating them\ninto your repo wherever they are needed."),(0,a.kt)("h3",{id:"command-line-interface"},"Command-Line Interface"),(0,a.kt)("p",null,"The\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/microsoft/rnx-kit/tree/main/packages/cli"},"command-line interface"),"\nbrings many of the tools together to perform common tasks, like bundling and\ndependency management. The CLI helps developers get things done from their\nterminal, and fits nicely into CI loops and package script blocks."),(0,a.kt)("p",null,"The CLI is controlled by command-line parameters and\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/microsoft/rnx-kit/tree/main/packages/config"},"package configuration"),".\nCommand-line parameters always override default values. Package configuration is optional but\nrecommended. Configuration is how a package tells the CLI about itself. For\nexample, a package can describe the options and paths to use during bundling."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:"title='Example configuration in package.json'",title:"'Example",configuration:!0,in:!0,"package.json'":!0},'{\n  "rnx-kit": {\n    "kitType": "app",\n    "reactNativeVersion": "^0.66 || ^0.67",\n    "capabilities": [\n      "core-android",\n      "core-ios",\n      "core-macos",\n      "core-windows",\n      "react"\n    ],\n    "bundle": true\n  }\n}\n')),(0,a.kt)("p",null,"With a configuration in place, you only need command-line parameters to override\nspecific behaviors."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title='Example commands'",title:"'Example","commands'":!0},"// Only bundle windows, and use a test entry point\n$ yarn react-native rnx-bundle --platform windows --entry-path ./src/index-test.ts\n\n// Run a bundle server on an unusual port\n$ yarn react-native rnx-start --port 23000\n\n// Run the dependency manager, scanning all packages and targeting React Native 0.66\n$ yarn react-native rnx-dep-check --vigilant 0.66\n")),(0,a.kt)("h3",{id:"choosing-individual-tools"},"Choosing Individual Tools"),(0,a.kt)("p",null,"The tools are designed to be used individually. You can choose\n",(0,a.kt)("a",{parentName:"p",href:"./tools/overview"},"specific tools"),", and use them however and wherever they are\nneeded. Mix and match with other tools and the CLI."),(0,a.kt)("p",null,"Each tool has its own TypeScript API. There is plenty of documentation,\nincluding How-To guides and examples to get you going."),(0,a.kt)("p",null,"Tools are released on their own schedule, as features are added and fixes are\nmade. Tools have their own test suite to keep quality high. And when you take a\nnew drop, you can review the change history that is generated from each PR."),(0,a.kt)("h2",{id:"web"},"Web"),(0,a.kt)("p",null,"Many of these tools work with web projects, too! Some examples include the\ndependency manager and the plugins for Babel and ESLint."))}m.isMDXComponent=!0}}]);