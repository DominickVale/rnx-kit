"use strict";(self.webpackChunk_rnx_kit_docsite=self.webpackChunk_rnx_kit_docsite||[]).push([[5994],{5318:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,b=m["".concat(l,".").concat(d)]||m[d]||c[d]||o;return n?r.createElement(b,i(i({ref:t},u),{},{components:n})):r.createElement(b,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},480:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return c}});var r=n(5773),a=n(808),o=(n(7378),n(5318)),i=["components"],p={},l="babel-plugin-import-path-remapper",s={unversionedId:"tools/babel-plugin-import-path-remapper",id:"tools/babel-plugin-import-path-remapper",title:"babel-plugin-import-path-remapper",description:"",source:"@site/docs/tools/babel-plugin-import-path-remapper.mdx",sourceDirName:"tools",slug:"/tools/babel-plugin-import-path-remapper",permalink:"/rnx-kit/docs/tools/babel-plugin-import-path-remapper",editUrl:"https://github.com/microsoft/rnx-kit/tree/main/docsite/docs/tools/babel-plugin-import-path-remapper.mdx",tags:[],version:"current",frontMatter:{},sidebar:"toolsSidebar",previous:{title:"Tools Overview",permalink:"/rnx-kit/docs/tools/overview"},next:{title:"babel-preset-metro-react-native",permalink:"/rnx-kit/docs/tools/babel-preset-metro-react-native"}},u={},c=[{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:3}],m={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"babel-plugin-import-path-remapper"},"babel-plugin-import-path-remapper"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"@rnx-kit/babel-plugin-import-path-remapper")," remaps ",(0,o.kt)("inlineCode",{parentName:"p"},"**/lib/**")," imports to\n",(0,o.kt)("inlineCode",{parentName:"p"},"**/src/**"),". This is useful for packages that are not correctly exporting\neverything via their ",(0,o.kt)("inlineCode",{parentName:"p"},"index.ts"),", but you still want to consume the TypeScript\nfiles rather than the transpiled JavaScript."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Add ",(0,o.kt)("inlineCode",{parentName:"p"},"@rnx-kit/babel-plugin-import-path-remapper")," to your ",(0,o.kt)("inlineCode",{parentName:"p"},"babel.config.js")," under\nplugins. For example, to remap all paths under the ",(0,o.kt)("inlineCode",{parentName:"p"},"@rnx-kit")," scope:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// babel.config.js\nmodule.exports = {\n  presets: ["module:metro-react-native-babel-preset"],\n  overrides: [\n    {\n      test: /\\.tsx?$/,\n      plugins: [\n        // @babel/plugin-transform-typescript doesn\'t support `const enum`s.\n        // See https://babeljs.io/docs/en/babel-plugin-transform-typescript#caveats\n        // for more details.\n        "const-enum",\n\n        [\n          "@rnx-kit/babel-plugin-import-path-remapper",\n          { test: (source) => source.startsWith("@rnx-kit/") },\n        ],\n      ],\n    },\n  ],\n};\n')),(0,o.kt)("p",null,"Or, if you're using ",(0,o.kt)("inlineCode",{parentName:"p"},"@rnx-kit/metro-config"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// babel.config.js\nconst { makeBabelConfig } = require("@rnx-kit/metro-config");\nmodule.exports = makeBabelConfig([\n  [\n    "@rnx-kit/babel-plugin-import-path-remapper",\n    { test: (source) => source.startsWith("@rnx-kit/") },\n  ],\n]);\n')),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Option"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"test"),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"(source: string) => boolean")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},"[Required]")," A function returning whether the passed source should be redirected to another module.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"remap"),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"(moduleName: string, path: string) => string")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},"[Optional]")," A function returning the module that should be used instead, e.g. ",(0,o.kt)("inlineCode",{parentName:"td"},"contoso/index.js")," -> ",(0,o.kt)("inlineCode",{parentName:"td"},"contoso/index.ts"),".")))))}d.isMDXComponent=!0}}]);